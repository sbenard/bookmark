{"version":3,"sources":["App/EditDialog.tsx","App/MediaItem.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["EditDialog","onClose","setMedias","open","medias","index","React","useState","currentMedia","setCurrentMedia","currentKeyWord","setCurrentKeyWord","useEffect","undefined","handlePropChange","prop","event","target","value","keyWords","title","type","author_name","url","created_at","height","width","duration","handleClose","Dialog","aria-labelledby","style","margin","TextField","fullWidth","onChange","id","defaultValue","label","disabled","FormControl","length","Paper","display","justifyContent","padding","map","keyWord","Chip","onDelete","newKeyWords","splice","Input","placeholder","startAdornment","InputAdornment","position","IconButton","aria-label","onClick","Add","DialogActions","Button","autoFocus","color","newMedias","MediaItem","media","setCurrentIndex","deleteMediaByIndex","setOpen","ListItem","button","ListItemAvatar","Avatar","Movie","Photo","ListItemText","primary","secondary","format","Date","ListItemSecondaryAction","window","edge","Link","Delete","App","localStorage","JSON","parse","setUrl","currentIndex","isOpen","setItem","stringify","isEmpty","flexDirection","inputProps","data-testid","axios","get","then","data","formatedMedia","formatISO","slice","catch","err","console","error","List","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d33f5b0.chunk.js","sourcesContent":["import {\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  Paper,\n  TextField,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { Media } from \"./types\";\n\nexport interface EditDialogProps {\n  open: boolean;\n  setMedias: (media: Media[]) => void;\n  onClose: () => void;\n  medias: Media[];\n  index: number;\n}\n\nexport const EditDialog: React.FC<EditDialogProps> = ({\n  onClose,\n  setMedias,\n  open,\n  medias,\n  index,\n}) => {\n  const [currentMedia, setCurrentMedia] = React.useState<Media | undefined>();\n  const [currentKeyWord, setCurrentKeyWord] = React.useState(\"\");\n  React.useEffect(() => {\n    setCurrentMedia(index >= 0 ? medias[index] : undefined);\n  }, [index, medias]);\n\n  if (!currentMedia) {\n    return <></>;\n  }\n\n  const handlePropChange = (prop: keyof Media) => (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setCurrentMedia({ ...currentMedia, [prop]: event.target.value });\n  };\n\n  const {\n    keyWords,\n    title,\n    type,\n    author_name,\n    url,\n    created_at,\n    height,\n    width,\n    duration,\n  } = currentMedia;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"edit-dialog-title\"\n      open={open}\n    >\n      <form style={{ margin: \"10px\" }}>\n        <TextField\n          fullWidth\n          onChange={handlePropChange(\"title\")}\n          margin=\"normal\"\n          id=\"title-text\"\n          defaultValue={title}\n          label=\"Titre\"\n        />\n        <TextField\n          fullWidth\n          onChange={handlePropChange(\"created_at\")}\n          type=\"datetime-local\"\n          margin=\"normal\"\n          id=\"createdAd-text\"\n          defaultValue={created_at}\n          label=\"Date d'ajout\"\n        />\n        <TextField\n          fullWidth\n          onChange={handlePropChange(\"author_name\")}\n          margin=\"normal\"\n          id=\"author-name-text\"\n          defaultValue={author_name}\n          label=\"Auteur\"\n        />\n        <TextField\n          fullWidth\n          onChange={handlePropChange(\"url\")}\n          margin=\"normal\"\n          id=\"author-url-text\"\n          defaultValue={url}\n          label=\"URL\"\n        />\n        <TextField\n          fullWidth\n          disabled\n          type=\"number\"\n          id=\"width-text\"\n          defaultValue={width}\n          label=\"Hauteur\"\n        />\n        <TextField\n          fullWidth\n          disabled\n          type=\"number\"\n          id=\"height-text\"\n          defaultValue={height}\n          label=\"Largeur\"\n        />\n\n        {type === \"video\" && (\n          <TextField\n            fullWidth\n            disabled\n            type=\"number\"\n            id=\"duration-text\"\n            defaultValue={duration}\n            label=\"DurÃ©e\"\n          />\n        )}\n      </form>\n      <FormControl style={{ margin: 10 }}>\n        {keyWords.length > 0 && (\n          <Paper\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              padding: 10,\n            }}\n          >\n            {keyWords.map((keyWord, index) => (\n              <Chip\n                onDelete={() => {\n                  const newKeyWords = [...currentMedia.keyWords];\n                  newKeyWords.splice(index, 1);\n                  setCurrentMedia({ ...currentMedia, keyWords: newKeyWords });\n                }}\n                key={`chip-${index}`}\n                label={keyWord}\n              />\n            ))}\n          </Paper>\n        )}\n        <Input\n          id=\"keyWords-text\"\n          onChange={(event) => {\n            setCurrentKeyWord(event.target.value);\n          }}\n          value={currentKeyWord}\n          placeholder=\"Mots clÃ©\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <IconButton\n                disabled={currentKeyWord === \"\"}\n                aria-label=\"Ajouter un mot cle\"\n                onClick={() => {\n                  setCurrentMedia({\n                    ...currentMedia,\n                    keyWords: [currentKeyWord, ...currentMedia.keyWords],\n                  });\n                  setCurrentKeyWord(\"\");\n                }}\n              >\n                <Add />\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <DialogActions>\n        <Button autoFocus onClick={handleClose} color=\"primary\">\n          Annuler\n        </Button>\n        <Button\n          autoFocus\n          onClick={() => {\n            const newMedias = [...medias];\n            newMedias.splice(index, 1);\n            setMedias(newMedias);\n            onClose();\n          }}\n          color=\"primary\"\n        >\n          Supprimer\n        </Button>\n        <Button\n          onClick={() => {\n            const newMedias = [...medias];\n            newMedias[index] = currentMedia;\n            setMedias(newMedias);\n            onClose();\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Sauvegarder\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import {\n  Avatar,\n  IconButton,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { Delete, Link, Movie, Photo } from \"@material-ui/icons\";\nimport { format } from \"date-fns\";\nimport { Media } from \"./types\";\n\ninterface MediaItemProps {\n  setCurrentIndex: (index: number) => void;\n  setOpen: (isOpen: boolean) => void;\n  deleteMediaByIndex: (index: number) => void;\n  media: Media;\n  index: number;\n}\n\nexport const MediaItem: React.FC<MediaItemProps> = ({\n  media,\n  index,\n  setCurrentIndex,\n  deleteMediaByIndex,\n  setOpen,\n}) => (\n  <ListItem\n    button\n    onClick={() => {\n      setCurrentIndex(index);\n      setOpen(true);\n    }}\n  >\n    <ListItemAvatar>\n      <Avatar>{media.type === \"video\" ? <Movie /> : <Photo />}</Avatar>\n    </ListItemAvatar>\n    <ListItemText\n      primary={`${media.title} - ${media.author_name}`}\n      secondary={`AjoutÃ© le ${format(\n        new Date(media.created_at),\n        \"dd/MM/yyyy - HH'h':mm\"\n      )}`}\n    />\n    <ListItemSecondaryAction>\n      <IconButton\n        onClick={() => {\n          window.open(media.url);\n        }}\n        edge=\"end\"\n        aria-label=\"redirection vers l'url\"\n      >\n        <Link />\n      </IconButton>\n      <IconButton\n        onClick={() => {\n          deleteMediaByIndex(index);\n        }}\n        edge=\"end\"\n        aria-label=\"delete\"\n      >\n        <Delete />\n      </IconButton>\n    </ListItemSecondaryAction>\n  </ListItem>\n);\n","import { Button, Input, List } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { formatISO } from \"date-fns\";\nimport React, { ChangeEvent } from \"react\";\nimport { EditDialog } from \"./EditDialog\";\nimport { MediaItem } from \"./MediaItem\";\nimport { Media } from \"./types\";\n\nfunction App() {\n  const defaultValue = localStorage.medias\n    ? JSON.parse(localStorage.medias)\n    : [];\n  const [url, setUrl] = React.useState(\"https://vimeo.com/254947206\");\n  const [medias, setMedias] = React.useState<Media[]>(defaultValue);\n  const [currentIndex, setCurrentIndex] = React.useState<number>(-1);\n  const [isOpen, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    localStorage.setItem(\"medias\", JSON.stringify(medias));\n  }, [medias]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const addMedia = (newMedia: Media) => {\n    setMedias([newMedia, ...medias]);\n  };\n  const deleteMediaByIndex = (index: number) => {\n    const newMedias = [...medias];\n    newMedias.splice(index, 1);\n    setMedias(newMedias);\n  };\n\n  const getMedia = () => {\n    axios\n      .get(`https://noembed.com/embed?url=${url}`)\n      .then(({ data }) => {\n        const formatedMedia = {\n          ...data,\n          created_at: formatISO(new Date()).slice(0, 16),\n          keyWords: [],\n        } as Media;\n\n        addMedia(formatedMedia);\n      })\n      .catch((err) => {\n        console.error(\"Erreur lors de la rÃ©cupÃ©ration du media\", err);\n      });\n  };\n\n  const isEmpty = !medias.length;\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <Input\n        placeholder=\"Veuillez saisir une url\"\n        inputProps={{ \"data-testid\": \"url-input\" }}\n        value={url}\n        onChange={(event: ChangeEvent<HTMLInputElement>) => {\n          setUrl(event.target.value);\n        }}\n      />\n      <Button data-testid=\"submit-button\" disabled={!url} onClick={getMedia}>\n        Valider\n      </Button>\n      <div>\n        {isEmpty && <div> Actuellement aucun bookmark n'a Ã©tÃ© sauvegardÃ©</div>}\n        {!isEmpty && (\n          <List>\n            {medias.map((media, index) => (\n              <MediaItem\n                key={`media-item-${index}`}\n                deleteMediaByIndex={deleteMediaByIndex}\n                setCurrentIndex={setCurrentIndex}\n                media={media}\n                index={index}\n                setOpen={setOpen}\n              />\n            ))}\n          </List>\n        )}\n      </div>\n      <EditDialog\n        open={isOpen}\n        index={currentIndex}\n        medias={medias}\n        setMedias={setMedias}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}